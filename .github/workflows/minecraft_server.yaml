name: Build and Push Minecraft Server Image

on:
  workflow_dispatch:
    inputs:
      minecraft_version:
        description: 'Minecraft version'
        required: false
        default: '1.20.1'
      forge_version:
        description: 'Forge version'
        required: false
        default: '47.4.0'
      java_version:
        description: 'Java version'
        required: false
        default: '21'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/minecraft_server
  MINECRAFT_VERSION: ${{ inputs.minecraft_version }}
  FORGE_VERSION: ${{ inputs.forge_version }}
  JAVA_VERSION: ${{ inputs.java_version }}

jobs:
  build-and-push:
    name: Build and Push Minecraft Server Image
    runs-on: ubuntu-latest
    environment: Admine
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=mc-${{ vars.MINECRAFT_VERSION }}-forge${{ vars.FORGE_VERSION }}-java${{ vars.JAVA_VERSION }}-graalvm-zerotier
            type=sha,prefix={{date 'YYYYMMDD'}}-

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./minecraft_server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAVA_VERSION=${{ vars.JAVA_VERSION }}
            FORGE_VERSION=${{ vars.FORGE_VERSION }}
            MINECRAFT_VERSION=${{ vars.MINECRAFT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Image digest
        run: echo "Image digest:" ${{ steps.push.outputs.digest }}