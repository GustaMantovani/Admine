/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: token xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: token xxxxx\" https://api.zerotier.com/api/v1/network</code></p><p><h3>Rate Limiting</h3></p><p>The ZeroTier Central API implements rate limiting.  Paid users are limited to 100 requests per second.  Free users are limited to 20 requests per second.</p> <p> You can get the OpenAPI spec here as well: <code>https://docs.zerotier.com/api/central/ref-v1.json</code></p>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ipv6AssignMode {
    #[serde(rename = "6plane", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub param_6plane: Option<Option<bool>>,
    #[serde(rename = "rfc4193", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rfc4193: Option<Option<bool>>,
    #[serde(rename = "zt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub zt: Option<Option<bool>>,
}

impl Ipv6AssignMode {
    pub fn new() -> Ipv6AssignMode {
        Ipv6AssignMode {
            param_6plane: None,
            rfc4193: None,
            zt: None,
        }
    }
}

